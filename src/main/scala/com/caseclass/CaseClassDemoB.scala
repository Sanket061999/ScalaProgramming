package com.caseclass

case class CarB(var name:String, model:String){
  val carName=name
  val carModel=model
  def printDetails():Unit={
    println(s"Car Name iss := ${carName}, ${name} and Car Model is= ${carModel}, ${model}")

  }}
object CaseClassDemoB {
  def main(args: Array[String]): Unit = {
    val bmw=CarB(name="BMW111", model="550")
    //No need to write new keyword, because apply method is autogenerated in case class
    bmw.printDetails()
    bmw.name="B.M.W."//constructor parameter is var this time
    //bmw.model="Q8" its default val
    bmw.printDetails()

    //bmw match {case CarB(a,b)->println(a+" "+b)}
    //case class autogenerated unapply method used for pattern matching

    //autogenerate the copy method
    var mercedes=bmw.copy(name="mercedes")
    mercedes.printDetails()
    bmw.printDetails()

    //Autogenerate the equals and hashcode method
    println(bmw==mercedes)

    //toString method is autoimplemented
    println(bmw)

  }}
